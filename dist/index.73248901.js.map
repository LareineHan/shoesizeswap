{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,iB,I,G,E,E,O,C,c,I,G,E,E,O,C,gB,IC0DA,SAAS,EAAc,CAAM,CAAE,CAAe,EAC7C,IAAI,EAAgB,SAAS,sBAAsB,CAAC,EAAgB,CAAC,EAAE,AAEvE,CAAA,EAAc,SAAS,CAAG,GAE1B,IAAI,EAAQ,EAAkB,GAC1B,GACH,EAAM,OAAO,CAAC,AAAC,IACd,IAAI,EAAS,SAAS,aAAa,CAAC,SACpC,CAAA,EAAO,SAAS,CAAG,EACnB,EAAO,KAAK,CAAG,EACf,EAAO,gBAAgB,CAAC,QAAS,WAIhC,AAHkB,SAAS,gBAAgB,CAC1C,kCAEW,OAAO,CAAC,AAAC,IACpB,EAAO,SAAS,CAAC,MAAM,CAAC,SAAU,IAAW,IAAI,CAClD,GAEe,WAAW,IAAI,CAAC,KAAK,EACpC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,GACD,GACA,EAAc,WAAW,CAAC,EAC3B,GAED,IAGA,IAAI,EAAgB,SAAS,aAAa,CAAC,SAE3C,CAAA,EAAc,SAAS,CAAG,IAC1B,EAAc,gBAAgB,CAAC,QAAS,WAIvC,AAHkB,SAAS,gBAAgB,CAC1C,kCAEW,OAAO,CAAC,AAAC,IACpB,EAAO,SAAS,CAAC,MAAM,CAAC,SACzB,GAEA,IAAI,EAAqB,SAAS,cAAc,CAAC,iBAC7C,EAAqB,SAAS,cAAc,CAAC,iBAC7C,EAAS,SAAS,cAAc,CAAC,SACrC,CAAA,EAAmB,aAAa,CAAG,EACnC,EAAmB,aAAa,CAAG,EACnC,EAAO,SAAS,CAAG,GACnB,EAAc,EAAmB,KAAK,CAAE,cACzC,GACA,EAAc,WAAW,CAAC,GAG1B,IAAI,EAAqB,SAAS,cAAc,CAAC,iBAC7C,EAAe,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAC7D,EAAgB,IAAI,OAAO,SAAU,GACzC,CAAA,EAAmB,SAAS,CAAG,GAC/B,EAAmB,GAAG,CAAC,GAEF,KAAjB,GAGH,AAiBM,CAAA,AATe,CAAA,CACrB,QAAS,CAAC,QAAS,KAAM,KAAM,QAAS,QAAQ,CAChD,QAAS,CAAC,QAAS,KAAM,KAAM,QAAS,QAAQ,CAChD,GAAI,CAAC,QAAS,QAAS,KAAM,QAAS,QAAQ,CAC9C,MAAO,CAAC,QAAS,QAAS,KAAM,KAAM,QAAQ,CAC9C,MAAO,CAAC,QAAS,QAAS,KAAM,KAAM,QAAQ,CAC9C,GAAI,CAAC,QAAS,QAAS,KAAM,QAAS,QAAQ,AAC/C,CAAA,CAEoB,CAlBkB,EAkBJ,EAAI,EAAE,AAAF,EAjBvB,OAAO,CAAC,AAAC,IACtB,IAAI,EAAS,IAAI,OAAO,EAAQ,GAChC,EAAmB,GAAG,CAAC,EACxB,EAGF,G,E,E,O,C,oB,I,G,I,E,E,S,E,E,SArHA,SAAS,IACR,IAAI,EAAgB,AAAA,EAAA,OAAQ,AAAC,CAAC,EAAE,CAAC,MAAM,CACnC,EAAc,AAAA,EAAA,OAAQ,AAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,AACvC,CAAA,SAAS,cAAc,CAAC,UAAU,SAAS,CAAG,eAC9C,QAAQ,GAAG,CAAC,EAAe,GAI3B,AAFkB,SAAS,gBAAgB,CAAC,kCAEhC,OAAO,CAAC,AAAC,IAChB,WAAW,EAAO,KAAK,IAAM,EAChC,EAAO,SAAS,CAAC,GAAG,CAAC,UAGrB,EAAO,SAAS,CAAC,MAAM,CAAC,SAE1B,EACD,CAEA,SAAS,EAAY,CAAU,CAAE,CAAY,CAAE,CAAY,EAE1D,IAAM,EAAkB,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAAU,IAAI,CACrC,AAAC,GAAW,EAAO,MAAM,GAAK,GAIzB,EAAkB,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAAU,IAAI,CACrC,AAAC,GAAW,EAAO,MAAM,GAAK,GAK/B,GAFA,QAAQ,GAAG,CAAC,QAAS,EAAiB,QAAS,GAE3C,GAAmB,EAAiB,CAEvC,IAAM,EAAkB,EAAgB,KAAK,CAAC,SAAS,CACtD,AAAC,GAAS,IAAS,GAGpB,GAAI,AAAoB,KAApB,EAAwB,CAG3B,IAAM,EAAa,EAAgB,KAAK,CAAC,EAAgB,CACzD,GAAI,EACH,OAAO,CAET,CACD,CACD,CAqFA,SAAS,EAAkB,CAAM,EAChC,IAAM,EAAQ,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAAU,IAAI,CAAC,AAAC,GAAS,EAAK,MAAM,GAAK,UAEvD,AAAI,EACI,EAAM,KAAK,CACL,EAAE,AACjB,C,G,E,Q,C","sources":["<anon>","converter.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0664\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0664\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"4JiRG\", function(module, exports) {\n\n$parcel$export(module.exports, \"setDefaultSize\", () => $3719ff9113bfc556$export$881f8558b600111d);\n$parcel$export(module.exports, \"convertSize\", () => $3719ff9113bfc556$export$47c7c5abe136e40c);\n$parcel$export(module.exports, \"populateSizes\", () => $3719ff9113bfc556$export$9c9ea5df416c0cd7);\n$parcel$export(module.exports, \"getSizesForRegion\", () => $3719ff9113bfc556$export$b299b87e35194958);\n// sizeConverter.js\n\nvar $fWLGp = parcelRequire(\"fWLGp\");\n\nvar $g7uhW = parcelRequire(\"g7uhW\");\nlet $3719ff9113bfc556$var$selectedSize = 0;\nfunction $3719ff9113bfc556$export$881f8558b600111d() {\n    let defaultRegion = (0, $fWLGp.default)[0].region;\n    let defaultSize = (0, $fWLGp.default)[0].sizes[5];\n    document.getElementById(\"output\").innerHTML = \"Choose 'To'.\";\n    console.log(defaultRegion, defaultSize);\n    // Set the default size button as active\n    let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n    sizeButtons.forEach((button)=>{\n        if (parseFloat(button.value) === defaultSize) {\n            button.classList.add(\"active\");\n            $3719ff9113bfc556$var$selectedSize = defaultSize;\n        } else button.classList.remove(\"active\");\n    });\n}\nfunction $3719ff9113bfc556$export$47c7c5abe136e40c(sourceSize, sourceRegion, targetRegion) {\n    // Find the source region object in sizesData\n    const sourceRegionObj = (0, $fWLGp.default).find((region)=>region.region === sourceRegion);\n    // Find the target region object in sizesData\n    const targetRegionObj = (0, $fWLGp.default).find((region)=>region.region === targetRegion);\n    console.log(\"\\uC18C\\uC2A4\\uC9C0\\uC5ED:\", sourceRegionObj, \"\\uD0C0\\uAC9F\\uC9C0\\uC5ED:\", targetRegionObj);\n    if (sourceRegionObj && targetRegionObj) {\n        // Find the index of the source size in the source region's sizes array\n        const sourceSizeIndex = sourceRegionObj.sizes.findIndex((size)=>size === sourceSize);\n        if (sourceSizeIndex !== -1) {\n            // if (sourceSizeIndex !== -1) {\n            // Get the size from the target region's sizes array at the same index\n            const targetSize = targetRegionObj.sizes[sourceSizeIndex];\n            if (targetSize) return targetSize;\n        }\n    }\n}\n// 1. pupulateSizes will remove the existing buttons in the container\n//    and add new buttons based on the selected region.\n// 2. The selected size is set to 0 and the convert function is called.\nfunction $3719ff9113bfc556$export$9c9ea5df416c0cd7(region, targetElementId) {\n    let targetElement = document.getElementsByClassName(targetElementId)[0];\n    // targetElement is the container for the size buttons for the selected region\n    targetElement.innerHTML = \"\";\n    let sizes = $3719ff9113bfc556$export$b299b87e35194958(region); // source region sizes array\n    if (sizes) sizes.forEach((size)=>{\n        let button = document.createElement(\"button\");\n        button.innerHTML = size;\n        button.value = size;\n        button.addEventListener(\"click\", function() {\n            let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n            sizeButtons.forEach((button)=>{\n                button.classList.toggle(\"active\", button === this);\n            });\n            $3719ff9113bfc556$var$selectedSize = parseFloat(this.value); // Assign the selected size as a float value\n            (0, $g7uhW.convert)(); // Call the convert function\n        });\n        targetElement.appendChild(button);\n    });\n    $3719ff9113bfc556$export$881f8558b600111d();\n    // Add a refresh button\n    let refreshButton = document.createElement(\"button\");\n    //  refreshButton.classList.add('btn', 'refreshBtn', 'btn-lg');\n    refreshButton.innerHTML = \"\\u21BB\";\n    refreshButton.addEventListener(\"click\", function() {\n        let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n        sizeButtons.forEach((button)=>{\n            button.classList.remove(\"active\");\n        });\n        $3719ff9113bfc556$var$selectedSize = 0; // Reset selected size to default\n        let sourceRegionSelect = document.getElementById(\"source_region\");\n        let targetRegionSelect = document.getElementById(\"target_region\");\n        let output = document.getElementById(\"output\");\n        sourceRegionSelect.selectedIndex = 0; // Set source_region to default (index 0)\n        targetRegionSelect.selectedIndex = 0; // Set target_region to default (index 0)\n        output.innerHTML = \"\"; // Clear output\n        $3719ff9113bfc556$export$9c9ea5df416c0cd7(sourceRegionSelect.value, \"size-button\");\n    });\n    targetElement.appendChild(refreshButton);\n    // Set the default option for target_region based on source_region\n    let targetRegionSelect = document.getElementById(\"target_region\");\n    let sourceRegion = document.getElementById(\"source_region\").value;\n    let defaultOption = new Option(\"Select\", \"\");\n    targetRegionSelect.innerHTML = \"\"; // Clear existing options\n    targetRegionSelect.add(defaultOption);\n    if (sourceRegion !== \"\") {\n        // If source region exists\n        let targetRegions = $3719ff9113bfc556$var$getTargetRegions(sourceRegion);\n        targetRegions.forEach((region)=>{\n            let option = new Option(region, region);\n            targetRegionSelect.add(option);\n        });\n    // Add default option\n    }\n}\nfunction $3719ff9113bfc556$var$getTargetRegions(sourceRegion) {\n    const targetRegions = {\n        \"US(M)\": [\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        \"US(W)\": [\n            \"US(M)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        UK: [\n            \"US(M)\",\n            \"US(W)\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        KOREA: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"JAPAN\"\n        ],\n        JAPAN: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\"\n        ],\n        EU: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"KOREA\",\n            \"JAPAN\"\n        ]\n    };\n    return targetRegions[sourceRegion] || [];\n}\nfunction $3719ff9113bfc556$export$b299b87e35194958(region) {\n    const sizes = (0, $fWLGp.default).find((data)=>data.region === region);\n    if (sizes) return sizes.sizes;\n    else return [];\n}\n\n});\n\n\nparcelRequire(\"4JiRG\");\n})();\n//# sourceMappingURL=index.73248901.js.map\n","// sizeConverter.js\nimport sizesData from './sizes.js'; // Import the sizesData from sizes.js\nimport { convert } from './script.js'; // Import the convert function from script.js\n\nlet selectedSize = 0;\n\nfunction setDefaultSize() {\n\tlet defaultRegion = sizesData[0].region;\n\tlet defaultSize = sizesData[0].sizes[5];\n\tdocument.getElementById('output').innerHTML = \"Choose 'To'.\";\n\tconsole.log(defaultRegion, defaultSize);\n\t// Set the default size button as active\n\tlet sizeButtons = document.querySelectorAll('.size-buttons-container button');\n\n\tsizeButtons.forEach((button) => {\n\t\tif (parseFloat(button.value) === defaultSize) {\n\t\t\tbutton.classList.add('active');\n\t\t\tselectedSize = defaultSize;\n\t\t} else {\n\t\t\tbutton.classList.remove('active');\n\t\t}\n\t});\n}\n\nfunction convertSize(sourceSize, sourceRegion, targetRegion) {\n\t// Find the source region object in sizesData\n\tconst sourceRegionObj = sizesData.find(\n\t\t(region) => region.region === sourceRegion\n\t);\n\n\t// Find the target region object in sizesData\n\tconst targetRegionObj = sizesData.find(\n\t\t(region) => region.region === targetRegion\n\t);\n\n\tconsole.log('소스지역:', sourceRegionObj, '타겟지역:', targetRegionObj);\n\n\tif (sourceRegionObj && targetRegionObj) {\n\t\t// Find the index of the source size in the source region's sizes array\n\t\tconst sourceSizeIndex = sourceRegionObj.sizes.findIndex(\n\t\t\t(size) => size === sourceSize\n\t\t);\n\n\t\tif (sourceSizeIndex !== -1) {\n\t\t\t// if (sourceSizeIndex !== -1) {\n\t\t\t// Get the size from the target region's sizes array at the same index\n\t\t\tconst targetSize = targetRegionObj.sizes[sourceSizeIndex];\n\t\t\tif (targetSize) {\n\t\t\t\treturn targetSize;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 1. pupulateSizes will remove the existing buttons in the container\n//    and add new buttons based on the selected region.\n// 2. The selected size is set to 0 and the convert function is called.\n\nfunction populateSizes(region, targetElementId) {\n\tlet targetElement = document.getElementsByClassName(targetElementId)[0];\n\t// targetElement is the container for the size buttons for the selected region\n\ttargetElement.innerHTML = '';\n\n\tlet sizes = getSizesForRegion(region); // source region sizes array\n\tif (sizes) {\n\t\tsizes.forEach((size) => {\n\t\t\tlet button = document.createElement('button');\n\t\t\tbutton.innerHTML = size;\n\t\t\tbutton.value = size;\n\t\t\tbutton.addEventListener('click', function () {\n\t\t\t\tlet sizeButtons = document.querySelectorAll(\n\t\t\t\t\t'.size-buttons-container button'\n\t\t\t\t);\n\t\t\t\tsizeButtons.forEach((button) => {\n\t\t\t\t\tbutton.classList.toggle('active', button === this);\n\t\t\t\t});\n\n\t\t\t\tselectedSize = parseFloat(this.value); // Assign the selected size as a float value\n\t\t\t\tconvert(); // Call the convert function\n\t\t\t});\n\t\t\ttargetElement.appendChild(button);\n\t\t});\n\t}\n\tsetDefaultSize();\n\n\t// Add a refresh button\n\tlet refreshButton = document.createElement('button');\n\t//  refreshButton.classList.add('btn', 'refreshBtn', 'btn-lg');\n\trefreshButton.innerHTML = '↻';\n\trefreshButton.addEventListener('click', function () {\n\t\tlet sizeButtons = document.querySelectorAll(\n\t\t\t'.size-buttons-container button'\n\t\t);\n\t\tsizeButtons.forEach((button) => {\n\t\t\tbutton.classList.remove('active');\n\t\t});\n\t\tselectedSize = 0; // Reset selected size to default\n\t\tlet sourceRegionSelect = document.getElementById('source_region');\n\t\tlet targetRegionSelect = document.getElementById('target_region');\n\t\tlet output = document.getElementById('output');\n\t\tsourceRegionSelect.selectedIndex = 0; // Set source_region to default (index 0)\n\t\ttargetRegionSelect.selectedIndex = 0; // Set target_region to default (index 0)\n\t\toutput.innerHTML = ''; // Clear output\n\t\tpopulateSizes(sourceRegionSelect.value, 'size-button');\n\t});\n\ttargetElement.appendChild(refreshButton);\n\n\t// Set the default option for target_region based on source_region\n\tlet targetRegionSelect = document.getElementById('target_region');\n\tlet sourceRegion = document.getElementById('source_region').value;\n\tlet defaultOption = new Option('Select', '');\n\ttargetRegionSelect.innerHTML = ''; // Clear existing options\n\ttargetRegionSelect.add(defaultOption);\n\n\tif (sourceRegion !== '') {\n\t\t// If source region exists\n\t\tlet targetRegions = getTargetRegions(sourceRegion);\n\t\ttargetRegions.forEach((region) => {\n\t\t\tlet option = new Option(region, region);\n\t\t\ttargetRegionSelect.add(option);\n\t\t});\n\t\t// Add default option\n\t}\n}\nfunction getTargetRegions(sourceRegion) {\n\tconst targetRegions = {\n\t\t'US(M)': ['US(W)', 'UK', 'EU', 'KOREA', 'JAPAN'],\n\t\t'US(W)': ['US(M)', 'UK', 'EU', 'KOREA', 'JAPAN'],\n\t\tUK: ['US(M)', 'US(W)', 'EU', 'KOREA', 'JAPAN'],\n\t\tKOREA: ['US(M)', 'US(W)', 'UK', 'EU', 'JAPAN'],\n\t\tJAPAN: ['US(M)', 'US(W)', 'UK', 'EU', 'KOREA'],\n\t\tEU: ['US(M)', 'US(W)', 'UK', 'KOREA', 'JAPAN'],\n\t};\n\n\treturn targetRegions[sourceRegion] || [];\n}\n\nfunction getSizesForRegion(region) {\n\tconst sizes = sizesData.find((data) => data.region === region);\n\n\tif (sizes) {\n\t\treturn sizes.sizes;\n\t} else return [];\n}\n\nexport { setDefaultSize, populateSizes, convertSize, getSizesForRegion };\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$3719ff9113bfc556$export$881f8558b600111d","$3719ff9113bfc556$export$47c7c5abe136e40c","$3719ff9113bfc556$export$9c9ea5df416c0cd7","region","targetElementId","targetElement","document","getElementsByClassName","innerHTML","sizes","$3719ff9113bfc556$export$b299b87e35194958","forEach","size","button","createElement","value","addEventListener","sizeButtons","querySelectorAll","classList","toggle","parseFloat","$g7uhW","convert","appendChild","refreshButton","remove","sourceRegionSelect","getElementById","targetRegionSelect","output","selectedIndex","sourceRegion","defaultOption","Option","add","targetRegions","UK","KOREA","JAPAN","EU","option","$fWLGp","defaultRegion","default","defaultSize","console","log","sourceSize","targetRegion","sourceRegionObj","find","targetRegionObj","sourceSizeIndex","findIndex","targetSize","data"],"version":3,"file":"index.73248901.js.map","sourceRoot":"../"}