{"mappings":"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","sources":["<anon>","src/js/script.js","src/js/sizes.js","src/js/converter.js"],"sourcesContent":["(function () {\nvar $a0d085e5ddcdf855$export$2e2bcd8739ae039 // export default sizesData;\n = sizesData = [\n    {\n        region: \"US(M)\",\n        sizes: [\n            3.5,\n            4,\n            4.5,\n            5,\n            5.5,\n            6,\n            6.5,\n            7,\n            7.5,\n            8,\n            8.5,\n            9,\n            9.5,\n            10,\n            10.5,\n            11,\n            11.5,\n            12,\n            12.5,\n            13,\n            13.5,\n            14,\n            14.5,\n            15,\n            15.5,\n            16,\n            16.5,\n            17,\n            17.5,\n            18,\n            18.5,\n            19,\n            19.5,\n            20,\n            20.5,\n            21,\n            21.5,\n            22\n        ]\n    },\n    {\n        region: \"US(W)\",\n        sizes: [\n            5,\n            5.5,\n            6,\n            6.5,\n            7,\n            7.5,\n            8,\n            8.5,\n            9,\n            9.5,\n            10,\n            10.5,\n            11,\n            11.5,\n            12,\n            12.5,\n            13,\n            13.5,\n            14,\n            14.5,\n            15,\n            15.5,\n            16,\n            16.5,\n            17,\n            17.5,\n            18,\n            18.5,\n            19,\n            19.5,\n            20,\n            20.5,\n            21,\n            21.5,\n            22,\n            22.5,\n            23,\n            23.5\n        ]\n    },\n    {\n        region: \"UK\",\n        sizes: [\n            3,\n            3.5,\n            4,\n            4.5,\n            5,\n            5.5,\n            6,\n            6.5,\n            7,\n            7.5,\n            8,\n            8.5,\n            9,\n            9.5,\n            10,\n            10.5,\n            11,\n            11.5,\n            12,\n            12.5,\n            13,\n            13.5,\n            14,\n            14.5,\n            15,\n            15.5,\n            16,\n            16.5,\n            17,\n            17.5,\n            18,\n            18.5,\n            19,\n            19.5,\n            20,\n            20.5,\n            21\n        ]\n    },\n    {\n        region: \"KOREA\",\n        sizes: [\n            220,\n            225,\n            230,\n            235,\n            240,\n            245,\n            250,\n            255,\n            260,\n            265,\n            270,\n            275,\n            280,\n            285,\n            290,\n            295,\n            300,\n            305,\n            310,\n            315,\n            320,\n            325,\n            330,\n            335,\n            340,\n            345,\n            350,\n            355,\n            360,\n            365,\n            370,\n            375,\n            380,\n            385,\n            390,\n            395,\n            400\n        ]\n    },\n    {\n        region: \"JAPAN\",\n        sizes: [\n            22,\n            22.5,\n            23,\n            23.5,\n            24,\n            24.5,\n            25,\n            25.5,\n            26,\n            26.5,\n            27,\n            27.5,\n            28,\n            28.5,\n            29,\n            29.5,\n            30,\n            30.5,\n            31,\n            31.5,\n            32,\n            32.5,\n            33,\n            33.5,\n            34,\n            34.5,\n            35,\n            35.5,\n            36,\n            36.5,\n            37,\n            37.5,\n            38,\n            38.5,\n            39,\n            39.5,\n            40\n        ]\n    },\n    {\n        region: \"EU\",\n        sizes: [\n            35.5,\n            36,\n            36.5,\n            37,\n            37.5,\n            38,\n            38.5,\n            39,\n            39.5,\n            40,\n            41,\n            41.5,\n            42,\n            42.5,\n            43,\n            44,\n            44.5,\n            45,\n            45.5,\n            46,\n            46.5,\n            47,\n            47.5,\n            48,\n            48.5,\n            49,\n            49.5,\n            50,\n            50.5,\n            51,\n            51.5,\n            52,\n            52.5,\n            53,\n            53.5,\n            54,\n            54.5,\n            55\n        ]\n    }\n];\n\n\n// sizeConverter.js\n\nlet $26d5b04079a9e077$var$selectedSize = 0;\nfunction $26d5b04079a9e077$export$881f8558b600111d() {\n    let defaultRegion = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039)[0].region;\n    let defaultSize = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039)[0].sizes[5];\n    document.getElementById(\"output\").innerHTML = \"Choose 'To'.\";\n    console.log(\"default size and region is all set\", defaultRegion, defaultSize);\n    // Set the default size button as active\n    let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n    sizeButtons.forEach((button)=>{\n        if (parseFloat(button.value) === defaultSize) {\n            button.classList.add(\"active\");\n            $26d5b04079a9e077$var$selectedSize = defaultSize;\n        } else button.classList.remove(\"active\");\n    });\n}\nfunction $26d5b04079a9e077$var$convertSize(sourceSize, sourceRegion, targetRegion) {\n    // Find the source region object in sizesData\n    const sourceRegionObj = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039).find((region)=>region.region === sourceRegion);\n    // Find the target region object in sizesData\n    const targetRegionObj = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039).find((region)=>region.region === targetRegion);\n    console.log(\"\\uC18C\\uC2A4\\uC9C0\\uC5ED:\", sourceRegionObj, \"\\uD0C0\\uAC9F\\uC9C0\\uC5ED:\", targetRegionObj);\n    if (sourceRegionObj && targetRegionObj) {\n        // Find the index of the source size in the source region's sizes array\n        const sourceSizeIndex = sourceRegionObj.sizes.findIndex((size)=>size === sourceSize);\n        if (sourceSizeIndex !== -1) {\n            // if (sourceSizeIndex !== -1) {\n            // Get the size from the target region's sizes array at the same index\n            const targetSize = targetRegionObj.sizes[sourceSizeIndex];\n            if (targetSize) return targetSize;\n        }\n    }\n}\n// 1. populateSizes will remove the existing buttons in the container\n//    and add new buttons based on the selected region.\n// 2. The selected size is set to 0 and the convert function is called.\nfunction $26d5b04079a9e077$export$9c9ea5df416c0cd7(region, targetElementId) {\n    let targetElement = document.getElementsByClassName(targetElementId)[0];\n    // targetElement is the container for the size buttons for the selected region\n    targetElement.innerHTML = \"\";\n    let sizes = $26d5b04079a9e077$export$b299b87e35194958(region); // source region sizes array\n    if (sizes) sizes.forEach((size)=>{\n        let button = document.createElement(\"button\");\n        button.innerHTML = size;\n        button.value = size;\n        button.addEventListener(\"click\", function() {\n            let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n            sizeButtons.forEach((button)=>{\n                button.classList.toggle(\"active\", button === this);\n            });\n            $26d5b04079a9e077$var$selectedSize = parseFloat(this.value); // Assign the selected size as a float value\n            $26d5b04079a9e077$export$9c68d69a4c5bbcf9(); // Call the convert function\n        });\n        targetElement.appendChild(button);\n    });\n    // setDefaultSize();\n    // Add a refresh button\n    let refreshButton = document.createElement(\"button\");\n    //  refreshButton.classList.add('btn', 'refreshBtn', 'btn-lg');\n    refreshButton.innerHTML = \"\\u21BB\";\n    refreshButton.addEventListener(\"click\", function() {\n        let sizeButtons = document.querySelectorAll(\".size-buttons-container button\");\n        sizeButtons.forEach((button)=>{\n            button.classList.remove(\"active\");\n        });\n        $26d5b04079a9e077$var$selectedSize = 0; // Reset selected size to default\n        let sourceRegionSelect = document.getElementById(\"source_region\");\n        let targetRegionSelect = document.getElementById(\"target_region\");\n        let output = document.getElementById(\"output\");\n        sourceRegionSelect.selectedIndex = 0; // Set source_region to default (index 0)\n        targetRegionSelect.selectedIndex = 0; // Set target_region to default (index 0)\n        output.innerHTML = \"\"; // Clear output\n        $26d5b04079a9e077$export$9c9ea5df416c0cd7(sourceRegionSelect.value, \"size-button\");\n    });\n    targetElement.appendChild(refreshButton);\n    // Set the default option for target_region based on source_region\n    let targetRegionSelect = document.getElementById(\"target_region\");\n    let sourceRegion = document.getElementById(\"source_region\").value;\n    let defaultOption = new Option(\"Select\", \"\");\n    targetRegionSelect.innerHTML = \"\"; // Clear existing options\n    targetRegionSelect.add(defaultOption);\n    if (sourceRegion !== \"\") {\n        // If source region exists\n        let targetRegions = $26d5b04079a9e077$var$getTargetRegions(sourceRegion);\n        targetRegions.forEach((region)=>{\n            let option = new Option(region, region);\n            targetRegionSelect.add(option);\n        });\n    // Add default option\n    }\n}\nfunction $26d5b04079a9e077$var$getTargetRegions(sourceRegion) {\n    const targetRegions = {\n        \"US(M)\": [\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        \"US(W)\": [\n            \"US(M)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        UK: [\n            \"US(M)\",\n            \"US(W)\",\n            \"EU\",\n            \"KOREA\",\n            \"JAPAN\"\n        ],\n        KOREA: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"JAPAN\"\n        ],\n        JAPAN: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"EU\",\n            \"KOREA\"\n        ],\n        EU: [\n            \"US(M)\",\n            \"US(W)\",\n            \"UK\",\n            \"KOREA\",\n            \"JAPAN\"\n        ]\n    };\n    return targetRegions[sourceRegion] || [];\n}\nfunction $26d5b04079a9e077$export$b299b87e35194958(region) {\n    const sizes = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039).find((data)=>data.region === region);\n    if (sizes) return sizes.sizes;\n    else return [];\n}\nfunction $26d5b04079a9e077$export$9c68d69a4c5bbcf9() {\n    let sourceRegion = document.getElementById(\"source_region\").value;\n    let targetRegion = document.getElementById(\"target_region\").value;\n    let activeButton = document.querySelector(\".size-buttons-container button.active\");\n    let chosenSize = activeButton ? activeButton.innerHTML : null;\n    // let chosenSize = document.querySelector(\n    // \t'.size-buttons-container button.active'\n    // ).innerHTML;\n    let selectedSize = parseFloat(chosenSize); // Assign the selected size as a number\n    console.log(\"sourceRegion:\", sourceRegion, \"targetRegion:\", targetRegion, \"selectedSize:\", selectedSize, typeof selectedSize // typeof selectedSize is number\n    );\n    if (!targetRegion) {\n        alert('error: Please select \"To\" area');\n        return;\n    }\n    let convertedSize = $26d5b04079a9e077$var$convertSize(selectedSize, sourceRegion, targetRegion);\n    if (isNaN(convertedSize)) document.getElementById(\"output\").innerHTML = \"Please select 'To' area\";\n    else document.getElementById(\"output\").innerHTML = \"Size \" + convertedSize + \" in \" + targetRegion;\n}\n\n\n//console.log('This is from script.js', sizesData);\nlet $66b821ea461d9f2a$var$selectedSize = 0;\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    (0, $26d5b04079a9e077$export$881f8558b600111d)();\n    const sourceRegionSelect = document.getElementById(\"source_region\");\n    sourceRegionSelect.addEventListener(\"change\", (event)=>{\n        const selectedRegion = event.target.value;\n        (0, $26d5b04079a9e077$export$9c9ea5df416c0cd7)(selectedRegion, \"size-button\");\n    });\n    const targetRegionSelect = document.getElementById(\"target_region\");\n    targetRegionSelect.addEventListener(\"change\", ()=>{\n        (0, $26d5b04079a9e077$export$9c68d69a4c5bbcf9)();\n    });\n});\nwindow.onload = function() {\n    let regions = (0, $a0d085e5ddcdf855$export$2e2bcd8739ae039).map((data)=>data.region);\n    let sourceRegionSelect = document.getElementById(\"source_region\");\n    let targetRegionSelect = document.getElementById(\"target_region\");\n    regions.forEach((region)=>{\n        let option = new Option(region, region);\n        sourceRegionSelect.add(option);\n        targetRegionSelect.add(option.cloneNode(true)); // Clone the option for the target_region select element\n    });\n    (0, $26d5b04079a9e077$export$9c9ea5df416c0cd7)(regions[0], \"size-button\"); // Default buttons for the first region\n};\nconst $66b821ea461d9f2a$var$targetRegionSelect = document.getElementById(\"target_region\");\n$66b821ea461d9f2a$var$targetRegionSelect.addEventListener(\"change\", function() {\n    const selectedRegion = this.value;\n    const sizes = (0, $26d5b04079a9e077$export$b299b87e35194958)(selectedRegion);\n    console.log(sizes); // or perform any other desired action\n    return sizes;\n});\n\n})();\n//# sourceMappingURL=index.436bd6a8.js.map\n","import sizesData from './sizes.js';\nimport {\n\tsetDefaultSize,\n\tpopulateSizes,\n\tgetSizesForRegion,\n\tconvert,\n} from './converter.js';\n\n//console.log('This is from script.js', sizesData);\n\nlet selectedSize = 0;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tsetDefaultSize();\n\n\tconst sourceRegionSelect = document.getElementById('source_region');\n\tsourceRegionSelect.addEventListener('change', (event) => {\n\t\tconst selectedRegion = event.target.value;\n\t\tpopulateSizes(selectedRegion, 'size-button');\n\t});\n\n\tconst targetRegionSelect = document.getElementById('target_region');\n\ttargetRegionSelect.addEventListener('change', () => {\n\t\tconvert();\n\t});\n});\n\nwindow.onload = function () {\n\tlet regions = sizesData.map((data) => data.region);\n\n\tlet sourceRegionSelect = document.getElementById('source_region');\n\tlet targetRegionSelect = document.getElementById('target_region');\n\n\tregions.forEach((region) => {\n\t\tlet option = new Option(region, region);\n\t\tsourceRegionSelect.add(option);\n\t\ttargetRegionSelect.add(option.cloneNode(true)); // Clone the option for the target_region select element\n\t});\n\n\tpopulateSizes(regions[0], 'size-button'); // Default buttons for the first region\n};\n\nconst targetRegionSelect = document.getElementById('target_region');\n\ntargetRegionSelect.addEventListener('change', function () {\n\tconst selectedRegion = this.value;\n\tconst sizes = getSizesForRegion(selectedRegion);\n\tconsole.log(sizes); // or perform any other desired action\n\treturn sizes;\n});\n","export default sizesData = [\n\t{\n\t\tregion: 'US(M)',\n\t\tsizes: [\n\t\t\t3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5,\n\t\t\t12, 12.5, 13, 13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18, 18.5, 19,\n\t\t\t19.5, 20, 20.5, 21, 21.5, 22,\n\t\t],\n\t},\n\t{\n\t\tregion: 'US(W)',\n\t\tsizes: [\n\t\t\t5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12, 12.5, 13,\n\t\t\t13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18, 18.5, 19, 19.5, 20,\n\t\t\t20.5, 21, 21.5, 22, 22.5, 23, 23.5,\n\t\t],\n\t},\n\t{\n\t\tregion: 'UK',\n\t\tsizes: [\n\t\t\t3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11,\n\t\t\t11.5, 12, 12.5, 13, 13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18,\n\t\t\t18.5, 19, 19.5, 20, 20.5, 21,\n\t\t],\n\t},\n\t{\n\t\tregion: 'KOREA',\n\t\tsizes: [\n\t\t\t220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290,\n\t\t\t295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365,\n\t\t\t370, 375, 380, 385, 390, 395, 400,\n\t\t],\n\t},\n\t{\n\t\tregion: 'JAPAN',\n\t\tsizes: [\n\t\t\t22, 22.5, 23, 23.5, 24, 24.5, 25, 25.5, 26, 26.5, 27, 27.5, 28, 28.5, 29,\n\t\t\t29.5, 30, 30.5, 31, 31.5, 32, 32.5, 33, 33.5, 34, 34.5, 35, 35.5, 36,\n\t\t\t36.5, 37, 37.5, 38, 38.5, 39, 39.5, 40,\n\t\t],\n\t},\n\t{\n\t\tregion: 'EU',\n\t\tsizes: [\n\t\t\t35.5, 36, 36.5, 37, 37.5, 38, 38.5, 39, 39.5, 40, 41, 41.5, 42, 42.5, 43,\n\t\t\t44, 44.5, 45, 45.5, 46, 46.5, 47, 47.5, 48, 48.5, 49, 49.5, 50, 50.5, 51,\n\t\t\t51.5, 52, 52.5, 53, 53.5, 54, 54.5, 55,\n\t\t],\n\t},\n];\n// export default sizesData;\n","// sizeConverter.js\nimport sizesData from './sizes.js'; // Import the sizesData from sizes.js\n\nlet selectedSize = 0;\n\nfunction setDefaultSize() {\n\tlet defaultRegion = sizesData[0].region;\n\tlet defaultSize = sizesData[0].sizes[5];\n\tdocument.getElementById('output').innerHTML = \"Choose 'To'.\";\n\tconsole.log('default size and region is all set', defaultRegion, defaultSize);\n\t// Set the default size button as active\n\tlet sizeButtons = document.querySelectorAll('.size-buttons-container button');\n\n\tsizeButtons.forEach((button) => {\n\t\tif (parseFloat(button.value) === defaultSize) {\n\t\t\tbutton.classList.add('active');\n\t\t\tselectedSize = defaultSize;\n\t\t} else {\n\t\t\tbutton.classList.remove('active');\n\t\t}\n\t});\n}\n\nfunction convertSize(sourceSize, sourceRegion, targetRegion) {\n\t// Find the source region object in sizesData\n\tconst sourceRegionObj = sizesData.find(\n\t\t(region) => region.region === sourceRegion\n\t);\n\n\t// Find the target region object in sizesData\n\tconst targetRegionObj = sizesData.find(\n\t\t(region) => region.region === targetRegion\n\t);\n\n\tconsole.log('소스지역:', sourceRegionObj, '타겟지역:', targetRegionObj);\n\n\tif (sourceRegionObj && targetRegionObj) {\n\t\t// Find the index of the source size in the source region's sizes array\n\t\tconst sourceSizeIndex = sourceRegionObj.sizes.findIndex(\n\t\t\t(size) => size === sourceSize\n\t\t);\n\n\t\tif (sourceSizeIndex !== -1) {\n\t\t\t// if (sourceSizeIndex !== -1) {\n\t\t\t// Get the size from the target region's sizes array at the same index\n\t\t\tconst targetSize = targetRegionObj.sizes[sourceSizeIndex];\n\t\t\tif (targetSize) {\n\t\t\t\treturn targetSize;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 1. populateSizes will remove the existing buttons in the container\n//    and add new buttons based on the selected region.\n// 2. The selected size is set to 0 and the convert function is called.\n\nfunction populateSizes(region, targetElementId) {\n\tlet targetElement = document.getElementsByClassName(targetElementId)[0];\n\t// targetElement is the container for the size buttons for the selected region\n\ttargetElement.innerHTML = '';\n\n\tlet sizes = getSizesForRegion(region); // source region sizes array\n\tif (sizes) {\n\t\tsizes.forEach((size) => {\n\t\t\tlet button = document.createElement('button');\n\t\t\tbutton.innerHTML = size;\n\t\t\tbutton.value = size;\n\t\t\tbutton.addEventListener('click', function () {\n\t\t\t\tlet sizeButtons = document.querySelectorAll(\n\t\t\t\t\t'.size-buttons-container button'\n\t\t\t\t);\n\t\t\t\tsizeButtons.forEach((button) => {\n\t\t\t\t\tbutton.classList.toggle('active', button === this);\n\t\t\t\t});\n\n\t\t\t\tselectedSize = parseFloat(this.value); // Assign the selected size as a float value\n\t\t\t\tconvert(); // Call the convert function\n\t\t\t});\n\t\t\ttargetElement.appendChild(button);\n\t\t});\n\t}\n\t// setDefaultSize();\n\n\t// Add a refresh button\n\tlet refreshButton = document.createElement('button');\n\t//  refreshButton.classList.add('btn', 'refreshBtn', 'btn-lg');\n\trefreshButton.innerHTML = '↻';\n\trefreshButton.addEventListener('click', function () {\n\t\tlet sizeButtons = document.querySelectorAll(\n\t\t\t'.size-buttons-container button'\n\t\t);\n\t\tsizeButtons.forEach((button) => {\n\t\t\tbutton.classList.remove('active');\n\t\t});\n\t\tselectedSize = 0; // Reset selected size to default\n\t\tlet sourceRegionSelect = document.getElementById('source_region');\n\t\tlet targetRegionSelect = document.getElementById('target_region');\n\t\tlet output = document.getElementById('output');\n\t\tsourceRegionSelect.selectedIndex = 0; // Set source_region to default (index 0)\n\t\ttargetRegionSelect.selectedIndex = 0; // Set target_region to default (index 0)\n\t\toutput.innerHTML = ''; // Clear output\n\t\tpopulateSizes(sourceRegionSelect.value, 'size-button');\n\t});\n\ttargetElement.appendChild(refreshButton);\n\n\t// Set the default option for target_region based on source_region\n\tlet targetRegionSelect = document.getElementById('target_region');\n\tlet sourceRegion = document.getElementById('source_region').value;\n\tlet defaultOption = new Option('Select', '');\n\ttargetRegionSelect.innerHTML = ''; // Clear existing options\n\ttargetRegionSelect.add(defaultOption);\n\n\tif (sourceRegion !== '') {\n\t\t// If source region exists\n\t\tlet targetRegions = getTargetRegions(sourceRegion);\n\t\ttargetRegions.forEach((region) => {\n\t\t\tlet option = new Option(region, region);\n\t\t\ttargetRegionSelect.add(option);\n\t\t});\n\t\t// Add default option\n\t}\n}\nfunction getTargetRegions(sourceRegion) {\n\tconst targetRegions = {\n\t\t'US(M)': ['US(W)', 'UK', 'EU', 'KOREA', 'JAPAN'],\n\t\t'US(W)': ['US(M)', 'UK', 'EU', 'KOREA', 'JAPAN'],\n\t\tUK: ['US(M)', 'US(W)', 'EU', 'KOREA', 'JAPAN'],\n\t\tKOREA: ['US(M)', 'US(W)', 'UK', 'EU', 'JAPAN'],\n\t\tJAPAN: ['US(M)', 'US(W)', 'UK', 'EU', 'KOREA'],\n\t\tEU: ['US(M)', 'US(W)', 'UK', 'KOREA', 'JAPAN'],\n\t};\n\n\treturn targetRegions[sourceRegion] || [];\n}\n\nfunction getSizesForRegion(region) {\n\tconst sizes = sizesData.find((data) => data.region === region);\n\n\tif (sizes) {\n\t\treturn sizes.sizes;\n\t} else return [];\n}\n\nfunction convert() {\n\tlet sourceRegion = document.getElementById('source_region').value;\n\tlet targetRegion = document.getElementById('target_region').value;\n\tlet activeButton = document.querySelector(\n\t\t'.size-buttons-container button.active'\n\t);\n\tlet chosenSize = activeButton ? activeButton.innerHTML : null;\n\t// let chosenSize = document.querySelector(\n\t// \t'.size-buttons-container button.active'\n\t// ).innerHTML;\n\tlet selectedSize = parseFloat(chosenSize); // Assign the selected size as a number\n\tconsole.log(\n\t\t'sourceRegion:',\n\t\tsourceRegion,\n\t\t'targetRegion:',\n\t\ttargetRegion,\n\t\t'selectedSize:',\n\t\tselectedSize,\n\t\ttypeof selectedSize // typeof selectedSize is number\n\t);\n\n\tif (!targetRegion) {\n\t\talert('error: Please select \"To\" area');\n\t\treturn;\n\t}\n\n\tlet convertedSize = convertSize(selectedSize, sourceRegion, targetRegion);\n\n\tif (isNaN(convertedSize)) {\n\t\tdocument.getElementById('output').innerHTML = \"Please select 'To' area\";\n\t} else {\n\t\tdocument.getElementById('output').innerHTML =\n\t\t\t'Size ' + convertedSize + ' in ' + targetRegion;\n\t}\n}\n\nexport { setDefaultSize, populateSizes, getSizesForRegion, convert };\n"],"names":["$a0d085e5ddcdf855$export$2e2bcd8739ae039","sizesData","region","sizes","$26d5b04079a9e077$export$9c9ea5df416c0cd7","targetElementId","targetElement","document","getElementsByClassName","innerHTML","$26d5b04079a9e077$export$b299b87e35194958","forEach","size","button","createElement","value","addEventListener","sizeButtons","querySelectorAll","classList","toggle","parseFloat","$26d5b04079a9e077$export$9c68d69a4c5bbcf9","appendChild","refreshButton","remove","sourceRegionSelect","getElementById","targetRegionSelect","output","selectedIndex","sourceRegion","defaultOption","Option","add","targetRegions","UK","KOREA","JAPAN","EU","option","find","data","targetRegion","activeButton","querySelector","selectedSize","console","log","alert","convertedSize","$26d5b04079a9e077$var$convertSize","sourceSize","sourceRegionObj","targetRegionObj","sourceSizeIndex","findIndex","targetSize","isNaN","defaultRegion","defaultSize","event","target","window","onload","regions","map","cloneNode","$66b821ea461d9f2a$var$targetRegionSelect"],"version":3,"file":"index.436bd6a8.js.map"}